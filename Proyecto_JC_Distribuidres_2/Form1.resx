<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>